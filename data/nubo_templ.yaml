heat_template_version: 2013-05-23

parameters:
  image_connector:
    type: string
    description: Name of image to use for servers
    #default: bac38a20-c715-4765-a811-b1dc3c612096
    default: kurento-connector
  image_broker:
    type: string
    description: Name of image to use for servers
    #default: 8121d3d1-6da8-4132-aa21-f925b1529837
    default: kurento-broker
  image_media_server_group:
    type: string
    description: Name of image to use for servers
    #default: 152289c6-25ec-414a-abc4-20e650807411
    default: kurento-media-server
  flavor:
    type: string
    description: Flavor to use for servers
    default: m1.medium
  key-name:
    type: string
    description: Key to access instances
    default: tub-nubomedia
  public_net:
    type: string
    description: ID or name of public network for which floating IP addresses will be allocated
    default: 2e2bc7f9-c29c-467c-94b6-5ef3724d79ac
  private_net:
    type: string
    default: fd704f1b-9238-4c2c-a0f5-4ffb4543e33a  
  private_subnet:
    type: string
    default: ab4595bf-12d5-4e92-baa8-b5dfb3c1a31d
  router:
    type: string
    default: 82bea54d-0413-4641-8bd3-2a540f4bad90
  router_port:
    type: string
    default: cebbea77-385b-4f5b-b410-ce828ab2723e
  
resources:
  connector:
    type: OS::Nova::Server
    properties:
      name: Connector
      image: { get_param: image_connector }
      flavor: { get_param: flavor }
      key_name: { get_param: key-name }
      networks:
        - port: { get_resource: connector_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            sudo sed -i "s/^\(kmf.transport[ \t]*\)=thrift/\1 = rabbitmq/" /etc/kurento/media-connector.properties            
            sudo sed -i "\$arabbitmq.address=$BROKER_IP:5672" /etc/kurento/media-connector.properties
            sudo service kmf-media-connector restart
          params:
            $BROKER_IP: { get_attr: [broker, first_address] }

  connector_port:
    type: OS::Neutron::Port
    properties: 
      network_id: { get_param: private_net }
      fixed_ips: 
        - subnet_id: { get_param: private_subnet }
      security_groups: [ { get_resource: server_security_group } ]

  connector_floating_ip: 
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource: connector_port }

  broker:
    type: OS::Nova::Server
    properties:
      name: Broker
      image: { get_param: image_broker }
      flavor: { get_param: flavor }  
      key_name: { get_param: key-name }
      networks:
        - port: { get_resource: broker_port }
  
  broker_port:
    type: OS::Neutron::Port
    properties: 
      network_id: { get_param: private_net }
      fixed_ips: 
        - subnet_id: { get_param: private_subnet }
      security_groups: [ { get_resource: server_security_group } ]

  media_server_group:
    type: AWS::AutoScaling::AutoScalingGroup
    properties:
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 3
      AvailabilityZones: [{ 'FN::GetAZs': '' }]
      LaunchConfigurationName: { get_resource: msg_launch_configuration }
  
  msg_launch_configuration:
    type: AWS::AutoScaling::LaunchConfiguration
    properties:
      ImageId: { get_param: image_media_server_group }
      InstanceType: { get_param: flavor }
      KeyName: { get_param: key-name }
      SecurityGroups: [ { get_resource: server_security_group } ]
      UserData:
        str_replace:
          template: |
            #!/bin/bash -v
            sudo sed -i "s/^\(serverAddress[ \t]*\)=[ \t]*[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*.*$/\1 = $BROKER_IP/" /etc/kurento/kurento.conf
          params:
            $BROKER_IP: { get_attr: [broker, first_address] }

  msg_scaleup_policy:
    type: AWS::AutoScaling::ScalingPolicy
    properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: {get_resource: media_server_group}
      Cooldown: 60
      ScalingAdjustment: 1

  msg_scaledown_policy:
    type: AWS::AutoScaling::ScalingPolicy
    properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: { get_resource: media_server_group }
      Cooldown: 60
      ScalingAdjustment: -1
  
  msg_scaleup_alarm:
    type: OS::Ceilometer::Alarm
    properties:
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 60
      repeat_actions: true
      alarm_actions:
        - {get_attr: [msg_scaleup_policy, AlarmUrl]}
      matching_metadata: {'metadata.user_metadata.groupname': {get_resource: media_server_group}}
      comparison_operator: gt

  msg_scaledown_alarm:
    type: OS::Ceilometer::Alarm
    properties:
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 15
      repeat_actions: true
      alarm_actions:
        - {get_attr: [msg_scaledown_policy, AlarmUrl]}
      matching_metadata: {'metadata.user_metadata.groupname': {get_resource: media_server_group}}
      comparison_operator: lt
  
  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Security group rules for nubomedia
      #name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp

outputs:
  connector_private_ip:
    description: IP address of connector instance in private network
    value: { get_attr: [ connector, first_address ] }
  broker_private_ip:
    description: IP address of broker instance in private network
    value: { get_attr: [ broker, first_address ] }
  connector_public_ip:
    description: Floating IP address of connector instance in public network
    value: { get_attr: [ connector_floating_ip, floating_ip_address ] }
  #ScaleUpURL:
  #  description: url to scale up
  #  value: { get_attr : [msg_scaleup_policy, AlarmUrl] }
  media_server_group_ips:
    description: IP addresses of media server scaling group instances in private network
    value: { get_attr: [ media_server_group, InstanceList ] }
